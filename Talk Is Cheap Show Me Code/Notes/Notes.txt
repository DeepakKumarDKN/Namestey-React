# This will just act as a variable
# To access functional Component we can just write {title}

const title = (
    <h1 id="title">Food Villa App</h1>
    <p>This is called React Element</p>
)

Functional Component
---------------------
To access a functional Component we have to write 
<Title/>

I can also access Functional Component like: 
<Title></Title>

Its better to use the upper One to call the function.

const Title = () => {
    return(
        <div>
            <h1 id="title">Food Villa App</h1>
            <p>This is called React Component</p>
        </div>
    )
}

what  can i write inside the {}. 
--------------------------------
I can write any thing like 
{console.log('hello')}

I can also write any peice of Javascript inside JSX Like: 
{3+5} 8 will display on the screen.

How to wtite comments inside JSX
---------------------------------
{
    // This is a comment
}






Props
-----
* Props are the short form for properties, properies are something which we can pass to the component through props.
* if i want to pass some data to the component we can pass it as props.
* props are just normal argument to the function. 
* passing some props to the component mean passing some argument to the function.


- In the below component i have taken props and i can fetch it by writting {props.name}

const RestaurantCard = (props) => {

    what is there inside the props. So basically we are passing props to the component se below i have written it clearly
    what react will do now react will take all these properties and what does i mean by properties 

    ""
    # these are the properties 

    foodname="Pizza Hut" rating="4.1"                              
    itemname="Fast Food, Pizzas" location="Netaji Nagar"

    """

    so now react will take all the properties and wrap it inside an object and it will pass over there as props 
    inside the props an object is there which contain all those properties and thats the reason u can fetch it 
    directly by writting 
    
        * {props.foodname}
        * {props.rating}



    return(
        <div className='res_card'>
            <div className="card_one">
                <img className="image_one" src={props.imageLink}/>
                <p className="food_name">{props.foodname}</p>
                <p className="rating">
                    <img className= "star" src={Star} />
                    <p>{props.rating}</p>
                </p>
                <p className="items_name">{props.itemname}</p>
                <p className="Location">{props.location}</p>
            </div>
        </div>
    )
}


<div className="resturant_container">
    <RestaurantCard 
    foodname="Pizza Hut" rating="4.1"                               --- here i am passing props to the ResturantCard Component.
    itemname="Fast Food, Pizzas" location="Netaji Nagar"            --- here i am passing props to the Resturantcard Component. 
    imageLink="https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/2b4f62d606d1b2bfba9ba9e5386fabb7"/>
</div>


We can also desctructure props like: 
-------------------------------------

Note: due to destructuring it is not required to write props.location  we can just write 
{location} doing it inside the curly brackets and still it will work fine.


const RestaurantCard = ({imageLink, foodname, rating, itemname, location}) => {
    return(
        <div className='res_card'>
            <div className="card_one">
                <img className="image_one" src={imageLink}/>
                <p className="food_name">{foodname}</p>
                <p className="rating">
                    <img className= "star" src={Star} />
                    <p>{rating}</p>
                </p>
                <p className="items_name">{itemname}</p>
                <p className="Location">{location}</p>
            </div>
        </div>
    )
}

Both the ways will work good and it is also being used but according to me i would perfer the 1st one 
but i like the second one also .

whenever a state variable update react re render the component 

let [ListOfResturants] = useState() : here i am creating a state variable 
let ListOfResturants ; here i am creating a javascript variable.



. if i am passing anthing inside the useState then i am passing a default alue for example : 
let [ListOfResturants] = useState('Resturant One)

so here i am passing the Resturamt One as the default Vakue.

What is State.? 
State is basically an object in which we can save some data like we used to save in variable.
state is basically used in a component
we can use state in functional component
for functional component it is useState and for Class Component it is this.state

why do we use state not variable. 
because if we use variable our componet will not get updated as we have seen in the previous example.
but if we use state we can do the update.

if we are using state then our component will re-render so thats why data will also get update.
but if we are using only variable and we want to update the variable then it will not happen because 
re-render will not happen 

to use state we have to import React
useState('anil') here i have given an default name you can give othername's as well 
its just a default value.

<h1>{data}</h1>
data = anil
the value we have in the data is getting displayed in the screen

setData : if we will not write setData then the value will not get updated.

So in component it is better to use useState while using data. 

Note:
------
Any JSX Expression can have only one Parent Element.
const Example = () =>{
    return(
        <> -------------------------------- This is thee parent and we nly can have one parent.
            <ComponentOne/>
            <ComponentTwo/>
        </> -------------------------------- This is called React Fragment.
    )
}

const Example = () =>{
    return(
        <div> -------------------------------- This is the parent and we nly can have one parent.
            <ComponentOne/>
            <ComponentTwo/>
        </div>
    )
}

we should prefer the upper one .
React.Fragment is comming from the react library, It is Like an Enpty Tag.

Config Driven UI
-----------------


Diffrent ways of writting style 
-------------------------------
const styletheBox = {
    backgroundColor : 'red'
}

i can write use that inside this component.
see where i have written i can write like this also. 

and the other one we know how to write bu creating an css file and linking it to the 
main html file.


const ResturantCard = () => {
    return (
        <div className="res-card" style = {styletheBox}>
            <ul class="card_list_items">
                <li>
                    <img src="https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/0984acc0ed7b914206dbbcb90297becc"/>
                    </li>
                <li>Meghna Foods</li>
                <li>Rating</li>
                <li>Cuisines</li>
                <li>Place: Tollygunge</li>
            </ul>
        </div>
    )
}

otherwise we can directly write like this: 

const ResturantCard = () => {
    return (style = {{ backgroundColor : 'red'}}
        <div className="res-card" style = {{ backgroundColor : 'red'}}>
            <ul class="card_list_items">
                <li>
                    <img src="https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/0984acc0ed7b914206dbbcb90297becc"/>
                    </li>
                <li>Meghna Foods</li>
                <li>Rating</li>
                <li>Cuisines</li>
                <li>Place: Tollygunge</li>
            </ul>
        </div>
    )
}


style = {{ backgroundColor : 'red'}}
- Look at this i am writtng it inside two curly braces: 
    1. it tells us that there is some javascript inside it .
    2. inside the second culy braces we are writting an javascript object.

Note: 
-----
Mostly we will use TALWIND for styling.

- This is not the way to render all the cards lets us learn about the Dynamic way to render our
data into the cards and lets learn  how to create cards dynamically

here we will talk about props 

const Body = () => {
    return (
        <div className="Body maxWidth">
            <div className="search_bar">
                Search
            </div>
            <div className="resturant_container">
                <ResturantCard />
                <ResturantCard />
                <ResturantCard />
                <ResturantCard />
            </div>
        </div>
    )
}