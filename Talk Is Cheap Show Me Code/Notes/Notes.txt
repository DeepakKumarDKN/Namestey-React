# This will just act as a variable
# To access functional Component we can just write {title}

const title = (
    <h1 id="title">Food Villa App</h1>
    <p>This is called React Element</p>
)

Functional Component
---------------------
To access a functional Component we have to write 
<Title/>

I can also access Functional Component like: 
<Title></Title>

Its better to use the upper One to call the function.

const Title = () => {
    return(
        <div>
            <h1 id="title">Food Villa App</h1>
            <p>This is called React Component</p>
        </div>
    )
}

what  can i wrire inside the {}. 
--------------------------------
I can write any thing like 
{console.log('hello')}

I can also write any peice of Javascript inside JSX Like: 
{3+5} 8 will display on the screen.

How to wtite comments inside JSX
---------------------------------
{
    // This is a comment
}





Props
-----
const RestaurantCard = (props) => {
    return(
        <div className='res_card'>
            <div className="card_one">
                <img className="image_one" src={props.imageLink}/>
                <p className="food_name">{props.foodname}</p>
                <p className="rating">
                    <img className= "star" src={Star} />
                    <p>{props.rating}</p>
                </p>
                <p className="items_name">{props.itemname}</p>
                <p className="Location">{props.location}</p>
            </div>
        </div>
    )
}

<div className="resturant_container">
    <RestaurantCard 
    foodname="Pizza Hut" rating="4.1" 
    itemname="Fast Food, Pizzas" location="Netaji Nagar" 
    imageLink="https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/2b4f62d606d1b2bfba9ba9e5386fabb7"/>
</div>


We can also desctructure props like: 
-------------------------------------

Note: due to destructuring it is not required to write props.location  we can just write 
{location} doing it inside the curly brackets and still it will work fine.


const RestaurantCard = ({imageLink, foodname, rating, itemname, location}) => {
    return(
        <div className='res_card'>
            <div className="card_one">
                <img className="image_one" src={imageLink}/>
                <p className="food_name">{foodname}</p>
                <p className="rating">
                    <img className= "star" src={Star} />
                    <p>{props.rating}</p>
                </p>
                <p className="items_name">{itemname}</p>
                <p className="Location">{location}</p>
            </div>
        </div>
    )
}

whenever a state variable update react re render the component 

let [ListOfResturants] = useState() : here i am creating a state variable 
let ListOfResturants ; here i am creating a javascript variable.



. if i am passing anthing inside the useState then i am passing a default alue for example : 
let [ListOfResturants] = useState('Resturant One)

so here i am passing the Resturamt One as the default Vakue.

What is State.? 
State is basically an object in which we can save some data like we used to save in variable.
state is basically used in a component
we can use state in functional component
for functional component it is useState and for Class Component it is this.state

why do we use state not variable. 
because if we use variable our componet will not get updated as we have seen in the previous example.
but if we use state we can do the update.

if we are using state then our component will re-render so thats why data will also get update.
but if we are using only variable and we want to update the variable then it will not happen because 
re-render will not happen 

to use state we have to import React
useState('anil') here i have given an default name you can give othername's as well 
its just a default value.

<h1>{data}</h1>
data = anil
the value we have in the data is getting displayed in the screen

setData : if we will not write setData then the value will not get updated.

So in component it is better to use useState while using data. 

Note:
------
Any JSX Expression can have only one Parent Element.
const Example = () =>{
    return(
        <> -------------------------------- This is thee parent and we nly can have one parent.
            <ComponentOne/>
            <ComponentTwo/>
        </> -------------------------------- This is called React Fragment.
    )
}

const Example = () =>{
    return(
        <div> -------------------------------- This is the parent and we nly can have one parent.
            <ComponentOne/>
            <ComponentTwo/>
        </div>
    )
}

we should prefer the upper one .
React.Fragment is comming from the react library, It is Like an Enpty Tag.

Config Driven UI
-----------------
