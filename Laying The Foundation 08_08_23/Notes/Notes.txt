* Command to bring npm to our project : - npm init.
* Command to bring npm to our project : - npm init
* Doing npm init will bring us package.json to our project
* There two type of dependency 
    normal dependency : 
    dev dependency : we need it in development phase/ development environment only.

* Browser List : This help us transform our code and make it compatible so that older version 
browser can understand it.

"browserslist" : [
    "Last 2 Chrome Versions"
]
this doesn't mean that it will work only on those two versions , this actually mean it will work on
other version but it will definitely work on last two versions of chrome.

* Babel converts the newer code to older code.
* Our modern Javascript (ES6) is converted into older Javascript and that is known as polyfill.
* we dont have to write polyfill babel does that for us.

*Tree Shaking mean removing unwanted code supoose we are using a library which have 5 function but 
i will use only 2 and rest of the 3 i dont want to use so what parcel will do it will ignore those 3
three functions.
command to run the project 
npx parcel index.html

* we dont have to write polyfill babel does that for us.

* JSX is not html inside the javascript jsx is html like syntax.

creating element using jsx
---------------------------
const heading = <h1 id= "heading">Hello Namestey React</h1>

How Does It Work Behing The scene 👓

- This JSX Code is transpiled/converted into React.createElement 
behind the scenes and the React.createElement is again converted into
JS Element or Js Object which is a ReactElement and at last it rendered 
into the DOM as an HTML Element.

- But who is doing this conversion , it is done by 💝 Babel 💝


creating element using React
----------------------------
const heading = React.createElement(
    "h1",
    {id:'title'}, 
    'Hello Namestey React'
)

so jsx seems to be easier than creating an element usng React. 😀

How yo give className in an JSX Element 💥
--------------------------------------------
const heading = <h1 id= "heading" className="heading">Hello Namestey React</h1>

// How to create an JSX 

const heading = (
    <>
        <h1>💙 Namestey React 💛</h1>
        <ul>
            <li>Course Name: Namestey React</li>
            <li>Mentor Name: Akshay Saini</li>
            <li>Course Fee: 2100</li>
            <li> <a href="https://namastedev.com/namaste-react/">Website Link</a></li>
        </ul>
    </>
)


🧡 Two types Of Components in React 
    💥Class Based Component
    💥Functional Component

. Class Based Componet is the old way of writting code
. Functional based component is the new way of writting code 

💦Functional Component
------------------------
its just like an normal javascript function which always returns some javascript code.
Syntax: 

const HeadingComponent = () =>{
    return(
        <>
            <h1>This is React Functional Component</h1>
        </>
    )
}

writting the same function without return
------------------------------------------
const HeadingComponent2 = () => (
    <h1>This is React Functional Component</h1>
)

🧡Important Note: 

    - I have written the functional component with return and without return 
    both are same.

Notes:🎇
-------
- React.createElement creates an object. 
- Babel is Javascript Compiler.
- Some older version browser don't understand the newer version es6 language 
    so here babel will convert the code so that the older version 
    browser also understand it.

- Babel is a javascript library which takes a peice of code 
reads that code and converts that code into something else, and 
it convert different type of code to different type of code.


- What is Component Composition 🧨
-----------------------------------
using another component inside a component lets get into an Example:
i will create here two functional component: - 
    1. Course Component 
    2. Heading Component

In this example iam using course component inside Heading Component this is known as component Composition

const CourseComponent = () =>(
    <>
        <h1>💙 Namestey React 💛</h1>
        <ul>
            <li>Course Name: Namestey React</li>
            <li>Mentor Name: Akshay Saini</li>
            <li>Course Fee: 2100</li>
            <li> <a href="https://namastedev.com/namaste-react/">Website Link</a></li>
        </ul>
    </>
)

const HeadingComponent = () =>(
        <>
            <CourseComponent /> 🎈--- here i am using another component inside an component

            <h1 className = "functional_component">Functional Component 🧡</h1>
            <p>Look at the code file to see how functional Componet is written</p>

        </>
    )

root.render(<HeadingComponent />)
